@page "/addrules"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
<MudGrid Style="margin-top: 10px">
    <MudGrid>
        <MudItem xs="6">
            <MudText Style="line-height: 60px" Typo="Typo.h5" GutterBottom="true">Điều khoản</MudText>
        </MudItem>
        <MudItem xs="6">
            <MudToolBar>
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.Outlined.Add" />
                <MudIconButton Icon="@Icons.Material.Outlined.Edit" />
                <MudIconButton Icon="@Icons.Material.Outlined.Notifications" />
            </MudToolBar>
        </MudItem>
    </MudGrid>
    <MudGrid>
        <MudItem xs="12">


            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                <MudGrid>

                    <MudItem xs="12" sm="6" md="6">
                        <MudTextField @bind-Value="model.ten" Label="Tên" Variant="Variant.Outlined" For="@(() => model.ten)"></MudTextField>
                    </MudItem>

                    <MudItem xs="12" sm="12" md="6">
                        <MudAutocomplete T="string" Label="Loại" @bind-Value="model.type" SearchFunc="@Search1"
                                         ResetValueOnEmptyText="@resetValueOnEmptyText"
                                         CoerceText="@coerceText" CoerceValue="@coerceValue" Variant="Variant.Outlined" For="@(() => model.type)" />
                    </MudItem>
                </MudGrid>
                <MudGrid>
                    

                    <MudItem xs="12" sm="12" md="12">
                        <MudTextField @bind-Value="model.ghichu" Label="Mô tả" Variant="Variant.Outlined" For="@(() => model.ghichu)"></MudTextField>
                    </MudItem>

                </MudGrid>


                <MudGrid>
                    <MudItem xs="12">
                        <MudText Align="Align.Center" Style="color: red" GutterBottom="true">"Vui lòng nhập thông tin, các ô có dấu (*) là bắt buộc"</MudText>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </MudItem>


    </MudGrid>
</MudGrid>

@code {

    Form model = new Form();
    public class Form
    {
        [Required(ErrorMessage = "Nhập mã!")]
        //[StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string ma { get; set; }

        public string ten { get; set; }
        public string ghichu { get; set; }
        public string type { get; set; }



    }

    bool success;
    string[] errors = { };
    private void OnValidSubmit(EditContext context)
    {
    }

    private string value { get; set; } = "Nothing selected";
    private HashSet<string> options { get; set; } = new HashSet<string>() { "Sale" };

    private string[] states =
    {
        "Sale", "Kế toán", "Maketing",
    };

   

    private bool resetValueOnEmptyText;
    private bool coerceText;
    private bool coerceValue;
    private string value1, value2;

    private async Task<IEnumerable<string>> Search1(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return states;
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
}

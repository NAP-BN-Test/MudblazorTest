// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TestMudBlazor.Pages.Job
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using TestMudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using TestMudBlazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using AKSoftware.Localization.MultiLanguages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\_Imports.razor"
using AKSoftware.Localization.MultiLanguages.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\Pages\Job\ChargeJob.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\Pages\Job\ChargeJob.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\Pages\Job\ChargeJob.razor"
using DiaLog;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/chargejob")]
    public partial class ChargeJob : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 398 "C:\Project\FontEnd\Blazor\MudblazorTest\TestMudBlazor\Pages\Job\ChargeJob.razor"
       
    private bool dense1 = true;
    private bool dense2 = true;
    Charges model = new Charges();
    public string Search { get; set; }
    public class Charges
    {
        public string Profit { get; set; }
        public string ExRate { get; set; }
        public DateTime? ExDate { get; set; }

    }



    bool success;
    string[] errors = { };
    private void OnValidSubmit(EditContext context)
    {
    }

    private void OnValidSubmit1(EditContext context)
    {
    }
    protected override async Task OnInitializedAsync()
    {
        Elements8 = SellingJobs;
        Elements9 = BuyingJobs;
    }

    private bool resetValueOnEmptyText;
    private bool coerceText;
    private bool coerceValue;
    private string value1, value2;
    private bool hover = true;
    public string searchString { get; set; }

    private string[] states =
{
        "Alabama", "Alaska", "American Samoa", "Arizona",
        "Arkansas", "California", "Colorado", "Connecticut",
        "Delaware", "District of Columbia", "Federated States of Micronesia",
        "Florida", "Georgia", "Guam", "Hawaii", "Idaho",
    };

    private string[] states2 =
    {
        "Xác nhận", "Treo", "Hủy",
    };

    private async Task<IEnumerable<string>> Search1(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return states;
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

    private async Task<IEnumerable<string>> Search2(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return states2;
        return states2.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }





    private HashSet<SellingJob> selectedItems8 = new HashSet<SellingJob>();
    private IEnumerable<SellingJob> Elements8 = new List<SellingJob>();

    private HashSet<BuyingJob> selectedItems9 = new HashSet<BuyingJob>();
    private IEnumerable<BuyingJob> Elements9 = new List<BuyingJob>();









    class SellingJob
    {
        public string Number;
        public string Customer;
        public string FareName;
        public string Fare;
        public string TaxType;
        public string Currency;
        public string ExRate;
        public string Unit;
        public int Qty;
        public string Rate;
        public string Tax1;
        public string Amt;
        public string LocalAmount;
        public string VAT;
        public string Remark;
        public string Evidence;

    }
    SellingJob[] SellingJobs = new SellingJob[]
                   {
        new SellingJob {
            Customer = "Công ty cổ phần Hà Thăng",Fare = "THC", FareName = "Phí xếp dỡ",TaxType = "0% VAT", Currency = "VNĐ",ExRate = "", Unit = "Container/ngày",Qty = 1,Rate = "500.000",
        Tax1 = "Y",Amt = "0", LocalAmount = "500.000", VAT = "0%",Remark = "", Evidence = "Internal", Number = "1", },

         new SellingJob {
            Customer = "Công ty cổ phần Hà Thăng",Fare = "DOC",FareName = "Phí chứng từ", TaxType = "0% VAT", Currency = "VNĐ",ExRate = "", Unit = "BL",Qty = 1,Rate = "1.000.000",
        Tax1 = "Y",Amt = "0", LocalAmount = "1.000.000", VAT = "0%",Remark = "", Evidence = "Tax", Number = "2",},

          new SellingJob {
            Customer = "Công ty cổ phần Hà Thăng",Fare = "OF",FareName = "Cước vận tải nội địa", TaxType = "0% VAT", Currency = "VNĐ",ExRate = "", Unit = "Container or CBM",Qty = 1,Rate = "4.000.000",
        Tax1 = "Y",Amt = "0", LocalAmount = "4.000.000", VAT = "29/09/2021",Remark = "", Evidence = "Tax", Number = "3",},

                   };


    class BuyingJob
    {
        public string Number;
        public string Vendor;
        public string FareName;
        public string Fare;
        public string TaxType;
        public string Currency;
        public string ExRate;
        public string Unit;
        public int Qty;
        public string Rate;
        public string Tax1;
        public string Amt;
        public string LocalAmount;
        public string VAT;
        public string Remark;
        public string Evidence;
        public string InvoiceNo;
        public string InvoiceDate;
        public string Tax2;
        public string TaxDate;
        public string SlipNo;
        public string Setoff;
        public string SetoffDate;
        public string Creator;
        public string Modifier;
        public string ModifierDate;
        public string Dept;
        public string Office;
    }

    BuyingJob[] BuyingJobs = new BuyingJob[]
                    {
        new BuyingJob {
            Vendor = "4PS/Chi nhánh công ty cổ phần Pizza 4PS",Fare = "TRG", FareName = "Phí vận tải đường bộ", TaxType = "0% VAT", Currency = "VNĐ",ExRate = "", Unit = "Shpt",Qty = 1,Rate = "4.000.000",
        Tax1 = "Y",Amt = "0", LocalAmount = "4.000.000", VAT = "0%",Remark = "", Evidence = "Tax",InvoiceNo = "4.000.000",InvoiceDate = "HPAY21030016",
        SlipNo = "Y",Tax2 = "Y", TaxDate = "11/10/2021", Setoff = "N",SetoffDate = "", Creator = "SALES",Modifier = "Tamtt",ModifierDate = "01/10/2021",Dept = "SALES",Office = "Tamtt", Number = "1",},

         new BuyingJob {
            Vendor = "4PS/Chi nhánh công ty cổ phần Pizza 4PS",Fare= "TOL Fee", FareName = "Phí cầu đường", TaxType = "0% VAT", Currency = "600.000",ExRate = "", Unit = "Container",Qty = 1,Rate = "600.000",
        Tax1 = "Y",Amt = "0", LocalAmount = "600.000", VAT = "0%",Remark = "", Evidence = "Internal",InvoiceNo = "4.000.000",InvoiceDate = "HPAY21030016",
        SlipNo = "Y",Tax2 = "Y", TaxDate = "11/10/2021", Setoff = "N",SetoffDate = "", Creator = "SALES",Modifier = "Tamtt",ModifierDate = "01/10/2021",Dept = "SALES",Office = "Tamtt", Number = "2",},

          new BuyingJob {
            Vendor = "4PS/Chi nhánh công ty cổ phần Pizza 4PS",Fare = "LON", FareName = "Phí nâng",TaxType = "0% VAT", Currency = "VNĐ",ExRate = "", Unit = "Container",Qty = 1,Rate = "700.000",
        Tax1 = "Y",Amt = "0", LocalAmount = "700.000", VAT = "0%",Remark = "", Evidence = "Tax",InvoiceNo = "4.000.000",InvoiceDate = "HPAY21030016",
        SlipNo = "Y",Tax2 = "Y", TaxDate = "11/10/2021", Setoff = "N",SetoffDate = "", Creator = "SALES",Modifier = "Tamtt",ModifierDate = "01/10/2021",Dept = "SALES",Office = "Tamtt", Number = "3",},

                                                    };


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISnackbar Snackbar { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IDialogService DialogService { get; set; }
    }
}
#pragma warning restore 1591
